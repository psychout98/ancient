import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

public class Main extends JFrame
		implements ActionListener, KeyListener, MouseListener, MouseMotionListener, MouseWheelListener {

	JPanel centerPanel, menuPanel;
	int curX, curY, xMoved, yMoved, iX, iY, cur, cur2;
	boolean dragging = false;
	int Stars[];

	Main() throws InterruptedException {
		super("Solar Nebula Formation Simulator");
		this.setSize(1000, 700);
		this.setVisible(false);
		this.setDefaultCloseOperation(3);
		this.setLocationRelativeTo(null);
		this.setLayout(new BorderLayout());
		this.setResizable(false);
		Random r = new Random();
		Stars = new int[4 * (r.nextInt(500) + 500)];
		for (int i = 0; i < Stars.length / 4; i++) {
			Stars[4 * i] = r.nextInt(1000);
			Stars[(4 * i) + 1] = r.nextInt(1000);
			Stars[(4 * i) + 2] = r.nextInt(2) + 1;
			Stars[(4 * i) + 3] = r.nextInt(2) + 1;
		}
		centerPanel = new graphic();
		centerPanel.addMouseListener(this);
		centerPanel.addMouseMotionListener(this);
		menuPanel = new JPanel();
		setMenuPanel();
		JMenuBar mb = new JMenuBar();
		JMenu file = new JMenu("File");
		mb.add(file);
		this.setJMenuBar(mb);
		this.add(menuPanel, BorderLayout.NORTH);
		this.add(centerPanel, BorderLayout.CENTER);
		this.setVisible(true);
		while (true) {
			Thread.sleep(25);
			repaint();
		}
	}

	public void setMenuPanel() {
		menuPanel.setLayout(new GridLayout(1, 1)); //
		menuPanel.setPreferredSize(new Dimension(1000, 65));
	}

	public static void main(String[] args) throws InterruptedException {
		Main window = new Main();
	}

	public class graphic extends JPanel {

		public void paint(Graphics p) {
			setSize(1000, 600);
			p.setColor(Color.black);
			p.fillRect(0, 0, 1000, 600);
			p.setColor(Color.white);
			for (int i = 0; i < Stars.length / 4; i++)
				p.fillRect(Stars[4 * i] + xMoved, Stars[(4 * i) + 1] + yMoved, Stars[(4 * i) + 2], Stars[(4 * i) + 3]);
		}

	}

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		iX = arg0.getPoint().x;
		iY = arg0.getPoint().y;
		dragging = true;
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		cur = xMoved;
		cur2 = yMoved;
		dragging = false;
	}

	@Override
	public void keyPressed(KeyEvent arg0) {

	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseWheelMoved(MouseWheelEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseDragged(MouseEvent e) {
		curX = e.getPoint().x;
		curY = e.getPoint().y;
		if (dragging) {
			xMoved = curX - iX + cur;
			if(Math.abs(xMoved)>1000)
				xMoved=0;
			yMoved = curY - iY + cur2;
			if(Math.abs(yMoved)>1000)
				yMoved=0;
		}
	}

	@Override
	public void mouseMoved(MouseEvent e) {
		// TODO Auto-generated method stub

	}

}
